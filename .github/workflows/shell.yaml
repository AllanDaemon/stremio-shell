name: Shell

on: [push]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest]
        node: [8]
    env:
      APP_IDENTITY: "C2E24BC6719F81C54FAD02B8B4E3535B330794B8"
      CERT_PASS: ${{ secrets.CERT_PASS }}
      DEST_DIR: ./stremio.app/Contents/MacOS
      TAG: mpv029
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: '8.x'

      - name: Submodules
        run: |
          git checkout $TAG
          git submodule update --init --recursive

      - name: Prepare environment
        run: |
          SHELL_VERSION=$(grep -E '\bVERSION=' ./stremio.pro | cut -d= -f 2)
          DMG_PATH="Stremio $S-HELL_VERSION.dmg"
          node -e 'process.stdout.write("::set-env name=CURRENT_BRANCH::"+process.env.GITHUB_REF.replace(/^refs\/(heads|tags)\//, "")+"\n")'
          echo ::set-env name=SHELL_VERSION::$SHELL_VERSION
          echo ::set-env name=DMG_PATH::$DMG_PATH

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          modules: qtwebengine qtwebglplugin

      - name: Dependencies
        run: |
          brew update
          npm -g install appdmg

      - name: Build
        run: |
          git clone https://github.com/iina/iina
          export MPV_BIN_PATH=$(pwd)/iina/deps
          ( cd $MPV_BIN_PATH/lib && ln -s libmpv.1.dylib libmpv.dylib )
          export OPENSSL_BIN_PATH=$(brew --prefix openssl)
          qmake .
          make

      - name: Add binaries
        run: |
          cp ./ffmpeg $DEST_DIR/
          cp $(which node) $DEST_DIR/
          chmod +w $DEST_DIR/ffmpeg
          chmod +w $DEST_DIR/node

      - name: Deploy
        run: |
          macdeployqt ./stremio.app -always-overwrite -executable=./stremio.app/Contents/MacOS/ffmpeg  -executable=./stremio.app/Contents/MacOS/node

      - name: Server
        env:
          TAG: master 
        run: |
          curl https://s3-eu-west-1.amazonaws.com/stremio-artifacts/four/$TAG/server.js > $DEST_DIR/server.js
          
      - name: Fix dependencies
        run: |
          cp ./iina/deps/lib/* ./stremio.app/Contents/Frameworks
          ./fix_osx_deps.sh "./stremio.app/Contents/Frameworks" "@executable_path/../Frameworks"

      - name: Testdrive
        run: ( $DEST_DIR/stremio & sleep 10 && STREMIO_PID=$! && kill $STREMIO_PID )

      - name: Rename the app
        run: mv ./stremio.app ./Stremio.app

      - name: Setup keychain
        run: ./mac/keychain.sh

      - name: Sign App
        run: |
          codesign --deep --force -v -s $APP_IDENTITY ./Stremio.app

      - name: Notarizing
        env:
          NOTARIZATION_PWD: ${{ secrets.NOTARIZATION_PWD }}
        run: |
          ./notarizer.sh Stremio.app "ci@stremio.com" "$NOTARIZATION_PWD"

      - name: Pack
        run: |
          ditto -c -k --rsrc --keepParent Stremio.app Stremio.app.zip
          sed -ie 's/"title": "Stremio.*"/"title": "Stremio '$SHELL_VERSION'"/' appdmg.json
          appdmg ./mac/appdmg.json "$DMG_PATH"

      - name: Sign Dmg
        run: |
          codesign --deep --force -v -s $APP_IDENTITY "$DMG_PATH"

      - name: Store DMG
        uses: actions/upload-artifact@v1
        with:
          name: StremioDMG
          path: "${{ env.DMG_PATH }}"

      # - name: Upload to AWS
      #   shell: bash
      #   env:
      #     AWS_ACCESS_KEY_ID: AKIAJUX6RQCFP5BJTECA
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET }}
      #     AWS_DEFAULT_REGION: eu-west-1
      #   run: |
      #     pip3 install s3cmd
      #     s3cmd --acl-public --access_key=$AWS_ACCESS_KEY_ID --secret_key=$AWS_SECRET_ACCESS_KEY --force --region=$AWS_DEFAULT_REGION put "$DMG_PATH" s3://stremio-artifacts/mac-newci/$CURRENT_BRANCH/
